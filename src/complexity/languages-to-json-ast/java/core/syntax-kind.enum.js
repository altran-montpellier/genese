"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyntaxKind = void 0;
/**
 * List of the Java AST nodes
 * // TODO : remove aliases
 */
var SyntaxKind;
(function (SyntaxKind) {
    //Classe
    SyntaxKind["ordinaryCompilationUnit"] = "ordinaryCompilationUnit";
    SyntaxKind["SourceFile"] = "sourceFile";
    SyntaxKind["Result"] = "result";
    SyntaxKind["PackageDeclaration"] = "packageDeclaration";
    SyntaxKind["importDeclaration"] = "importDeclaration";
    SyntaxKind["import"] = "import";
    SyntaxKind["packageOrTypeName"] = "packageOrTypeName";
    SyntaxKind["classDeclaration"] = "classDeclaration";
    SyntaxKind["classModifier"] = "classModifier";
    SyntaxKind["normalClassDeclaration"] = "normalClassDeclaration";
    SyntaxKind["enumDeclaration"] = "enumDeclaration";
    SyntaxKind["Class"] = "Class";
    SyntaxKind["typeIdentifier"] = "typeIdentifier";
    SyntaxKind["typeDeclaration"] = "typeDeclaration";
    SyntaxKind["typeParameters"] = "typeParameters";
    SyntaxKind["superclass"] = "superclass";
    SyntaxKind["superinterfaces"] = "superinterfaces";
    SyntaxKind["classBody"] = "classBody";
    SyntaxKind["annotation"] = "annotation";
    SyntaxKind["Public"] = "Public";
    SyntaxKind["Protected"] = "Protected";
    SyntaxKind["Private"] = "Private";
    SyntaxKind["Abstract"] = "Abstract";
    SyntaxKind["Static"] = "Static";
    SyntaxKind["Final"] = "Final";
    SyntaxKind["Strictfp"] = "Strictfp";
    SyntaxKind["Less"] = "Less";
    SyntaxKind["typeParameterList"] = "typeParameterList";
    SyntaxKind["Greater"] = "Greater";
    SyntaxKind["typeParameter"] = "typeParameter";
    SyntaxKind["Comma"] = "Comma";
    SyntaxKind["Extends"] = "Extends";
    SyntaxKind["classType"] = "classType";
    SyntaxKind["Implements"] = "Implements";
    SyntaxKind["interfaceTypeList"] = "interfaceTypeList";
    SyntaxKind["interfaceType"] = "interfaceType";
    SyntaxKind["LCurly"] = "LCurly";
    SyntaxKind["classBodyDeclaration"] = "classBodyDeclaration";
    SyntaxKind["RCurly"] = "RCurly";
    SyntaxKind["fieldDeclaration"] = "fieldDeclaration";
    SyntaxKind["semiColon"] = "semiColon";
    SyntaxKind["instanceInitializer"] = "instanceInitializer";
    SyntaxKind["staticInitializer"] = "staticInitializer";
    SyntaxKind["constructorDeclaration"] = "constructorDeclaration";
    SyntaxKind["classMemberDeclaration"] = "classMemberDeclaration";
    SyntaxKind["methodDeclaration"] = "methodDeclaration";
    SyntaxKind["methodDeclarator"] = "methodDeclarator";
    SyntaxKind["methodModifier"] = "methodModifier";
    SyntaxKind["interfaceDeclaration"] = "interfaceDeclaration";
    SyntaxKind["Semicolon"] = "Semicolon";
    SyntaxKind["fieldModifier"] = "fieldModifier";
    SyntaxKind["unannType"] = "unannType";
    SyntaxKind["unannClassType"] = "unannClassType";
    SyntaxKind["variableDeclaratorList"] = "variableDeclaratorList";
    SyntaxKind["Transient"] = "Transient";
    SyntaxKind["Volatile"] = "Volatile";
    SyntaxKind["variableDeclarator"] = "variableDeclarator";
    SyntaxKind["Equals"] = "Equals";
    SyntaxKind["Identifier"] = "Identifier";
    SyntaxKind["dims"] = "dims";
    SyntaxKind["expression"] = "expression";
    SyntaxKind["arrayInitializer"] = "arrayInitializer";
    SyntaxKind["unannPrimitiveType"] = "unannPrimitiveType";
    SyntaxKind["isDims"] = "isDims";
    SyntaxKind["unannReferenceType"] = "unannReferenceType";
    SyntaxKind["numericType"] = "numericType";
    SyntaxKind["Boolean"] = "Boolean";
    SyntaxKind["typeArguments"] = "typeArguments";
    SyntaxKind["Dot"] = "Dot";
    SyntaxKind["methodHeader"] = "methodHeader";
    SyntaxKind["methodBody"] = "methodBody";
    SyntaxKind["Synchronized"] = "Synchronized";
    SyntaxKind["Native"] = "Native";
    SyntaxKind["throws"] = "throws";
    SyntaxKind["Void"] = "Void";
    SyntaxKind["LBrace"] = "LBrace";
    SyntaxKind["formalParameterList"] = "formalParameterList";
    SyntaxKind["RBrace"] = "RBrace";
    SyntaxKind["This"] = "This";
    SyntaxKind["formalParameter"] = "formalParameter";
    SyntaxKind["variableParaRegularParameter"] = "variableParaRegularParameter";
    SyntaxKind["variableArityParameter"] = "variableArityParameter";
    SyntaxKind["variableModifier"] = "variableModifier";
    SyntaxKind["DotDotDot"] = "DotDotDot";
    SyntaxKind["variableDeclaratorId"] = "variableDeclaratorId";
    SyntaxKind["Throws"] = "Throws";
    SyntaxKind["exceptionTypeList"] = "exceptionTypeList";
    SyntaxKind["exceptionType"] = "exceptionType";
    SyntaxKind["block"] = "block";
    SyntaxKind["constructorModifier"] = "constructorModifier";
    SyntaxKind["constructorDeclarator"] = "constructorDeclarator";
    SyntaxKind["constructorBody"] = "constructorBody";
    SyntaxKind["simpleTypeName"] = "simpleTypeName";
    SyntaxKind["receiverParameter"] = "receiverParameter";
    SyntaxKind["explicitConstructorInvocation"] = "explicitConstructorInvocation";
    SyntaxKind["unqualifiedExplicitConstructorInvocation"] = "unqualifiedExplicitConstructorInvocation";
    SyntaxKind["qualifiedExplicitConstructorInvocation"] = "qualifiedExplicitConstructorInvocation";
    SyntaxKind["Super"] = "Super";
    SyntaxKind["Enum"] = "Enum";
    SyntaxKind["enumBody"] = "enumBody";
    SyntaxKind["enumBodyDeclarations"] = "enumBodyDeclarations";
    SyntaxKind["enumConstant"] = "enumConstant";
    SyntaxKind["At"] = "At";
    SyntaxKind["enumConstantModifier"] = "enumConstantModifier";
    SyntaxKind["argumentList"] = "argumentList";
    SyntaxKind["isEmptyTypeDeclaration"] = "isEmptyTypeDeclaration";
    SyntaxKind["Interface"] = "Interface";
    SyntaxKind["tokenType"] = "tokenType";
    SyntaxKind["expressionName"] = "expressionName";
    SyntaxKind["typeName"] = "typeName";
})(SyntaxKind = exports.SyntaxKind || (exports.SyntaxKind = {}));
